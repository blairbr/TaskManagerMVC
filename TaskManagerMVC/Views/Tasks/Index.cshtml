@model IEnumerable<TaskManagerMVC.Models.Task>

@{
    ViewData["Title"] = "Task List";
}
<h1>Task List</h1>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-outline-primary" /> |
            <a class="btn btn-outline-dark" asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<p>
    <a class="btn btn-outline-primary" asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DescriptionSortParm"]">@Html.DisplayNameFor(model => model.Description)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">@Html.DisplayNameFor(model => model.CompletionStatus)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">@Html.DisplayNameFor(model => model.DueDate)</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CompletionStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DueDate)
            </td>
            <td>
                <a class="btn btn-outline-primary" asp-action="Edit" asp-route-id="@item.TaskId">Edit</a>
                <a class="btn btn-outline-secondary" asp-action="Delete" asp-route-id="@item.TaskId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
